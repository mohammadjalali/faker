services:
  zookeeper:
    image: wurstmeister/zookeeper:3.8.4
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: faker-kafka
    image: wurstmeister/kafka:2.13-2.6.3
    ports:
     - 9093:9093
    environment:
      KAFKA_ADVERTISED_LISTENER: INSIDE://faker-kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_LIST: INSIDE://0.0.0.0:9093
      KAFKA_LISTENER_INTERNAL_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_NAME_INSIDE_PORT: 9093
      KAFKA_LISTENER_NAME_EXTERNAL_PORT: 9093
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9093 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always

  elasticsearch:
    container_name: faker-elasticsearch
    image: elasticsearch:7.17.26
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always

  producer:
    container_name: faker-produer
    build: ./producer/
    depends_on:
      kafka:
        condition: service_healthy
    env_file:
      - .env
    restart: always

  consumer:
    container_name: faker-consumer
    build: ./consumer/
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
    env_file:
      - .env

  web:
    container_name: faker-web
    build: ./api/
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
